name: Publish to PyPI

on:
  push:
    branches:
      - main
    paths:
      - 'pplx_cli/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  release:
    types:
      - created

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      
      - name: Install dependencies
        run: poetry install --with test
      
      - name: Run tests
        run: poetry run pytest

  create-release:
    needs: test
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release')
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Get version from pyproject.toml
        id: get-version
        run: |
          version=$(grep "^version = " pyproject.toml | cut -d'"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          release_name: Release v${{ steps.get-version.outputs.version }}
          body: |
            Release version ${{ steps.get-version.outputs.version }}
            
            Changes in this release:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

  publish:
    needs: [test, create-release]
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release')
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      
      - name: Configure Poetry
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      
      - name: Install dependencies
        run: poetry install
      
      - name: Build and publish
        run: poetry publish --build